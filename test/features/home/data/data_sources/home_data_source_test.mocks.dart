// Mocks generated by Mockito 5.4.4 from annotations
// in coffee_shop_360/test/features/home/data/data_sources/home_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:coffee_shop_360/core/managers/network/network_manager.dart'
    as _i3;
import 'package:coffee_shop_360/core/managers/network/network_model.dart'
    as _i1;
import 'package:coffee_shop_360/core/managers/network/network_result.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i2;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NetworkManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkManager<F extends _i1.INetworkModel<dynamic>> extends _i2.Mock
    implements _i3.NetworkManager<F> {
  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  F get failureModel => (super.noSuchMethod(
        Invocation.getter(#failureModel),
        returnValue: _i4.dummyValue<F>(
          this,
          Invocation.getter(#failureModel),
        ),
        returnValueForMissingStub: _i4.dummyValue<F>(
          this,
          Invocation.getter(#failureModel),
        ),
      ) as F);

  @override
  _i5.Future<_i6.NetworkResult<S, F>>
      request<S, P extends _i1.INetworkModel<dynamic>>({
    required P? parseModel,
    required String? path,
    required _i3.HttpMethods? httpMethod,
    bool? isHttps = true,
    Map<String, String>? headers,
    Map<String, dynamic>? bodyParameters,
    Map<String, String>? queryParameters,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #request,
              [],
              {
                #parseModel: parseModel,
                #path: path,
                #httpMethod: httpMethod,
                #isHttps: isHttps,
                #headers: headers,
                #bodyParameters: bodyParameters,
                #queryParameters: queryParameters,
              },
            ),
            returnValue: _i5.Future<_i6.NetworkResult<S, F>>.value(
                _i4.dummyValue<_i6.NetworkResult<S, F>>(
              this,
              Invocation.method(
                #request,
                [],
                {
                  #parseModel: parseModel,
                  #path: path,
                  #httpMethod: httpMethod,
                  #isHttps: isHttps,
                  #headers: headers,
                  #bodyParameters: bodyParameters,
                  #queryParameters: queryParameters,
                },
              ),
            )),
            returnValueForMissingStub:
                _i5.Future<_i6.NetworkResult<S, F>>.value(
                    _i4.dummyValue<_i6.NetworkResult<S, F>>(
              this,
              Invocation.method(
                #request,
                [],
                {
                  #parseModel: parseModel,
                  #path: path,
                  #httpMethod: httpMethod,
                  #isHttps: isHttps,
                  #headers: headers,
                  #bodyParameters: bodyParameters,
                  #queryParameters: queryParameters,
                },
              ),
            )),
          ) as _i5.Future<_i6.NetworkResult<S, F>>);
}
